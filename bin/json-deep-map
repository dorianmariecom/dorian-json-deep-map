#!/usr/bin/env ruby
# frozen_string_literal: true

require "dorian/arguments"
require "dorian/to_struct"
require "json"

def deep_map(json, &)
  json = yield(json.to_deep_struct).from_deep_struct

  if json.is_a?(Hash)
    json.to_h { |key, value| deep_map([key, value], &) }
  elsif json.is_a?(Array)
    json.map { |element| deep_map(element, &) }
  else
    json
  end
end

parsed = Dorian::Arguments.parse(version: { alias: :v }, help: { alias: :h })

abort parsed.help if parsed.options.help

if parsed.options.version
  abort File.read(File.expand_path("../VERSION", __dir__))
end

inputs = parsed.files.map { |file| File.read(file) }
inputs = [$stdin.each_line.to_a.map(&:strip).join("\n")] if inputs.empty?

inputs.each do |input|
  puts(
    JSON.pretty_generate(
      deep_map(JSON.parse(input)) do |it|
        it = it.dup
        eval(parsed.arguments.join(" "))
        it
      end
    )
  )
end
